<?xml version="1.0" encoding="euc-jp"?>
<chapter id='desc_vad'><title>音声区間検出・入力棄却</title>

<epigraph>
<para>
Julius では，入力音声データから発話区間を検出する機能をいくつか持って
いる．デフォルトでは，音声波形データに対して振幅と零交差に基づく入力検
知のみを行うが，より雑音に頑健な方法として，特徴量の混合ガウス分布モデ
ル (Gaussian mixture model; GMM) を用いたフレームごとの音声・非音声識
別に基づく区間検出，およびデコーダの認識中の仮説情報をもとに区間検出を
行うデコーダベースVADが実装されている．
</para>
<para>
また，入力区間全体を認識した後に，その区間全体の情報から入力の棄却を判
定する入力棄却を備えている．
</para>
<para>
これらの方法は，マイク入力のみならず音声ファイル入力に対しても行う
ことができる．
</para>
<para>
以下，Juliusにおける音声区間検出および入力棄却について述べる．
</para>
</epigraph>

<sect1><title>音声区間検出</title>
<para>
一般に，音声区間検出は，入力ストリームに対して短時間ごとの特徴から音声
区間の開始・終了を検出し，それを元に認識単位の切り出しおよび発話単位の
区切りを行う方法である．以下，Julius で用いてる方法について解説する．
</para>
<sect2><title>振幅と零交差に基づく入力検知</title>
<para>
Julius は入力音声ストリームを調べ，一定のレベルを越える振幅について零
交差数が一定数を越えたとき，音声始端として認識処理を開始する．そして，
値が一定以下になったときに，音声の終端としてそこで入力を区切って1発話
分の認識を終了する．
</para>
<para>
この方法は最も基本的な方法であり，計算量が少ないという利点がある．ただ
し，入力の振幅は実行環境（録音ボリューム，マイクと発話者の距離等）に大
きく左右され，しきい値の調整が必要である．また，SN 比が低い環境では
性能が著しく悪化する．
</para>
<para>
この振幅と零交差に基づく入力検知は，デフォルトではマイクロフォン等の
直接入力に対して ON, ファイル入力に対して OFF となっている． 明示的に
オプション <option>-cutsilence</option> を指定することで ONに，
<option>-nocutsilence</option> を指定することで OFF にできる．
</para>
<para>
切り出しの性能はしきい値に大きく依存する．振幅の検出レベルは 
<option>-lv</option>, 零交差数は <option>-zc</option> で指定する．
</para>
<para>
また，Julius では振幅の比較的小さい発声開始部や末尾の減衰部分を
検出区間に確実に含めるために，検出した区間の前後にマージンを設けて
いる．区間前後のマージン長はそれぞれ<option>-headmargin</option>,
<option>-tailmargin</option> で指定できる．
</para>
</sect2>

<sect2><title>GMMによる音声区間検出</title>
<para>
Julius はコンパイル時の設定によって，特徴量のガウス混合分布モデル 
(Gaussian mixture model; GMM) に基づく音声区間検出が行える．入力短時間
フレームごとに特徴量抽出して GMM の尤度計算を行い，その入力フレームの
音声・非音声モデルでの尤度（出現確率の対数）差をもとに，音声区間の開始・
終了を判別する．この処理は，前節の振幅と零交差によって検知された音声波形に
対して行われる．
</para>
<para>
この試験的な機能は，デフォルトでは無効化され
ており，ソースからコンパイルする際に <literal>configure</literal>に
<literal>--enable-gmm-vad</literal> を指定することで有効となる．なお，
有効にした場合，あとで述べる GMM に基づく入力棄却は無効となる．
</para>
<para>
GMMは，3状態（出力状態が１つのみ）のHMMとして，HTK形式の定義ファイルと
して与える．
</para>
<para>
GMM用の特徴量抽出パラメータは，同時に使用する音響モデルと異なる特徴量
を別途指定することも可能であり，同じ特徴量ベクトルを共有することもでき
る．別途指定する場合は，インスタンス宣言オプション
<option>-AM_GMM</option> のあとに音響モデルと同じ要領で指定する．音響
モデルと同様の任意の特徴量設定ができるが，サンプリング周波数，フレーム
サイズ，フレームシフト幅の３つのみ，同時に使う音響モデルと同一である必
要がある（同一でない場合エラーとなる）．なお，<option>-AM_GMM</option> 
の指定がない場合は，GMM の特徴量として，最初に定義されている音響モデル
と同じ特徴量を共有して用いられる．
</para>
</sect2>

<sect2><title>デコーダベース VAD</title>
<para>
デコーダに基づく VAD は，デフォルトでは無効化されており，使用するには
コンパイル時に <literal>configure</literal> オプションでそれぞれ 
<literal>--enable-decoder-vad</literal> を指定する必要がある．
</para>
</sect2>

</sect1>

<sect1><title>入力棄却</title>
<para>
入力処理の終了後に，事後的に入力を棄却することができる．認識後の後処
理として，その区間全体の第1パスの認識情報や認識結果をもとに，その入
力の棄却を判定する．棄却時，第2パスは実行されない．
</para>
<sect2><title>GMMに基づく入力棄却</title>
<para>
GMMの入力区間全体での累積尤度から，入力棄却が行える．入力終了後にそ
の入力区間全体がどのモデルに最も近いかを識別し，非音声だった場合に，
その入力を棄却する．
</para>
<para>
GMMは，3状態（出力状態が１つのみ）のHMMとして定義する．形式はHTK形式で
与える．形式や使用できる特徴量の制限は音響モデルと同じである．GMMで用
いるMFCC特徴量の設定は，<option>-AM_GMM</option>のあとに音響モデルと同様に
指定する．この特徴量設定は音響モデルと別に，明示的に指定する必要があることに
注意が必要である．（アルゴリズムの解説）
</para>
</sect2>
<sect2><title>平均パワーによる棄却</title>
<para>
この試験的な機能は，デフォルトでは無効化されており，ソースからコンパイ
ルする際に <literal>configure</literal>に
<literal>--enable-power-reject</literal> を指定することで有効となる．
リアルタイム認識時のみ用いることが出来る．なお，特徴量抽出でパワー項を
用いていない場合は使用できない．
</para>
</sect2>
</sect1>
</chapter>
