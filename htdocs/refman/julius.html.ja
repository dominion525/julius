<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=euc-jp">
<meta http-equiv="Content-Language" content="ja">
<title>
julius
マニュアル
</title>
<link rel="stylesheet" href="man.css" type="text/css">
</head>
<body>
[ 
<a href="julius.html.ja">Japanese</a> 
| 
<a href="julius.html.en">English</a> 
| 
<a href="index.html.en">インデックスに戻る</a> 
]
<div align="right"><font size="-1">
Last update: "2005/09/29 04:03:21"
</font></div>
<pre>
<h3>JULIUS(1)                                               JULIUS(1)</h3>



<h3>NAME</h3>
       Julius - open source multi-purpose LVCSR engine

<h3>SYNOPSIS</h3>
       julius [-C jconffile] [options ...]

<h3>DESCRIPTION</h3>
       Julius  は数万語を対象とした大語彙連続音声認識を行うことの
       できるフリーの認識エンジンです．単語3-gramを用いた2パス 構
       成の段階的探索により高精度な認識を行うことができます．

       Julius  を用いて音声認識を行うには，他にN-gram言語モデル，
       認識用単語辞書，および音韻モデルが必要です．標準的なモデル
       形 式(ARPA標準形式およびHTK形式)をサポートしており，任意の
       単語・音素単位を用いることができます．ユーザは自分の作成し
       た言語モデルや音響モデルを組み合わせて任意の規模や対象の音
       声認識システムを構築することができます．基本モデルの入手先
       や作成方法については，付属ドキュメントなどを別途ご覧くださ
       い．

       認識対象としてマイク入力，録音済みの音声波形ファイルおよび
       特徴抽出したパラメータファイルに対応しています．語彙数の上
       限は 65,535 語です．

<h3>使用モデル</h3>
       Julius では以下のモデルを用います．

       音素モデル
                 音素HMM(Hidden Markov Model)を用います．音素モデ
                 ル(monophone)，   音  素  環  境  依  存  モ  デ
                 ル(triphone)，tied-mixtureモデル，phonetic tied-
                 mixture モデルを扱えます．音素環境依存モデルの場
                 合は単語間の依存関係も考慮されます． HTK のHMM定
                 義 言語で書かれたHMM定義ファイルを読み込むことが
                 できます．また，付属ツール mkbinhmm であらかじめ
                 バイナリ形式に変換しておけば高速に読み込むことが
                 できます．

       言語モデル
                 言語モデルとして2-gramおよび逆向きの3-gramを用い
                 ます． ARPA standard format およびそれらを付属の
                 mkbingram で変換したバイナリ形式のN-gramを読み込
                 むことができます．

<h3>音声入力</h3>
       デバイスからの直接入力および音声ファイルの認識を行えます．
       マイクロフォン端子やDatLink(NetAudio)，およびクライアン ト
       ツール adintool を用いたネットワーク経由での直接入力に対応
       しています．音声ファイルの形式は 16bit WAVE ファイル（無圧
       縮） およびRAWファイル (16bit, BigEndian) です．コンパイル
       時にlibsndfileをリンクすることでさらに多くの形式に対応可能
       で す．また，HTK形式の特徴パラメータファイルで与えることも
       できます．

       注意：Julius内部で計算できる特徴量はMFCC_E_D_N_Zのみです．
       こ れ以外の特徴抽出を必要とするHMMを使う場合は，マイク入力
       や音声波形ファイル入力は使えません．その場合，HTKなどで 抽
       出した特徴パラメータファイルを与えるようにして下さい．

<h3>探索アルゴリズム</h3>
       Julius  の認識処理は2パス構成です．まず第1パスで入力全体を
       完全に処理し，中間結果を出力します．モデルは単語2-gramと単
       語HMMの木構造ネットワークを用います．解探索はleft-to-right
       にフレーム同期ビーム探索を行います．

       第2パスでは3-gramを用いて逆向きに探索を行い，より精度の 高
       い 認識結果を求めます．第1パスの中間結果を絞り込み＋先読み
       情報として用い，単語単位のスタックデコーディングを行 い ま
       す．

       音 素環境依存モデル(triphone)を用いたときは，第1パスおよび
       第2パスで単語間の 音 素 環 境 依 存 を 考 慮 し ま す． ま
       たtied-mixture やphonetic  tied-mixture モデルではGaussian
       pruningによる高速な音響尤度計算を行います．

       アルゴリズムの詳細に関しては別途関連文書をご覧ください．

<h3>OPTIONS</h3>
       以下のオプションで使用モデルやパラメータなどを指定します．
       コマンドライン上ですべて指定することもできますが， jconf設
       定ファイルとして１つのテキストファイル内にまとめて記述して
       おき，起動時に "-C" で指定することができます．

       以下は全てのオプションの説明です．

   音声入力ソース
       -input {rawfile|mfcfile|mic|adinnet|netaudio|stdin}
              音 声 デー タの入力ソースを選択する．それぞれ 'raw-
              file' は波形ファイル， adinnet' は adintool など の
              クライアントからのネットワーク経由入力，' stdin' は
              標準入力からの入力を指定する．

              サポートする音声波形ファイル形式は 16bit WAV(モノラ
              ル， 無圧縮)および RAW (16bit, モノラル, BigEndian)
              ．コンパイル時にlibsndfileがあればさらに多くの形 式
              が 扱える．実際にその実行バイナリでどの形式がサポー
              トされているかはオプション "-help" で確認できる．な
              お標準入力についてはWAVおよびRAWのみサポートする．
              (default: mfcfile)

       -filelist file
              (-input  rawfile|mfcfile 時) 認識対象のファイルが複
              数ある場合に，そのリストを与えてバッチ処理させる．

       -adport portnum
              (-input adinnet 時) adinnet で使用するポート番号．
              (default: 5530)

       -NA server:unit
              (-input netaudio) 接続するDatLinkサーバ名と ユ ニッ
              トID．netaudio 使用時必須．

       -zmean  -nozmean
              音 声 入 力時に，DC成分の除去を行うかどうかを指定す
              る． (default: 行わない (-nozmean))

       -nostrip
              録音デバイスによって生じることのある，録音開始時 あ
              るいは終了時の無効な 0 値サンプルの自動除去を行わな
              いようにする．デフォルトは自動除去を行う．

       -record directory
              directory 以下に，認識された入力音声データを連番 で
              自 動保存する．音声データは切り出された一入力ごとに
              ファイルに記録される．ファイル名は，認識開始時の シ
              ステム時間を表す"年.月日.時分秒.wav" という名前で保
              存される．ファイル形式は WAV,16bit,monoral,無 圧 縮
              で ある．"-rejectshort"併用時は，棄却された入力も保
              存される．

       -rejectshort msec
              msec で指定されたミリ秒より短い入力を棄却し，認識を
              行 わ な い． モ ジュー ル モード時はクライアントに
              '&lt;REJECTED REASON="..."/&gt;' が出力され る．"-record"
              オ プション併用時は，このオプションにより棄却された
              入力も保存される．

   音声区間検出
       -cutsilence

       -nocutsilence
              入力音声に対して音声区間の検出を行うかどうかを明 示
              的 に指定．(default: mic または adinnet は ON, ファ
              イル入力は OFF)

       -lv threslevel
              波形の振幅レベルのしきい値( 0 - 32767)．振幅がこ の
              値 を越えたときに音声区間の開始とみなし，次にこの値
              を下回ったときに音声区間終了とする(default: 2000)．

       -zc zerocrossnum
              １秒あたりの零交差数のしきい値 (default: 60)

       -headmargin msec
              音声区間開始部のマージン．単位はミリ秒
              (default: 300)

       -tailmargin msec
              音声区間終了部のマージン．単位はミリ秒
              (default: 400)

   音響分析
       -smpFreq frequency
              音 声 の サンプリング周波数を Hz で指定する．あるい
              は"-smpPeriod"でも指定可能．このサンプリング周波 数
              は 使用する音響モデルの学習条件と一致する必要がある
              ことに注意すること．マイク入力および RAW ファイル入
              力 時には，このサンプリング周波数を明示的に指定する
              必要がある．"-fsize", "-fshift", "-delwin" で指定す
              る値にも注意すること．
              (default: 16000 (Hz = 625ns))

       -smpPeriod period
              音 声 の サンプリング周期をナノ秒で指定する．あるい
              は"-smpFreq"でも指定可能．このサンプリング周波数 は
              使 用する音響モデルの学習条件と一致する必要があるこ
              とに注意すること．マイク入力および RAW ファイル入力
              時 には，このサンプリング周波数を明示的に指定する必
              要がある．"-fsize", "-fshift", "-delwin" で指定する
              値にも注意すること．
              (default: 625 (ns = 16000Hz))

       -fsize sample
              窓サイズをサンプル数で指定 (default: 400)．

       -fshift sample
              フレームシフト幅をサンプル数で指定 (default: 160)．

       -delwin frame
              デルタウィンドウ幅をフレーム数で指定 (default: 2)．

       -lofreq frequency
              MFCC フィルタバンク計算でバンド幅制限を行う：下限の
              cut-off 周波数値を指定する．"-hifreq" も参 考 の こ
              と．
              (default: -1 = disabled)

       -hifreq frequency
              MFCC フィルタバンク計算でバンド幅制限を行う：上限の
              cut-off 周波数値を指定する．"-lofreq" も参 考 の こ
              と．
              (default: -1 = disabled)

       -sscalc
              入 力ファイル先頭の無音部を用いて，入力全体に対して
              スペクトルサブトラクションを行う．各ファイルの先 頭
              に は 一 定時間の無音区間が含まれているとの前提のも
              と，ノイズの推定を各ファイルの 先 頭 か ら 一 定 時
              間(-sscalclenで指定) のサンプルで行う．ファイル入力
              に対してのみ有効．

       -sscalclen
              "-sscalc" でのファイル先頭の無音部の長さをミリ秒 で
              指定 (default: 300)

       -ssload filename
              推 定ノイズスペクトルをファイルから読み込み，それを
              用いて入力に対してスペクトルサブトラクショ ン を 行
              う． 推 定ノイズスペクトルファイルはあらかじめ mkss
              で作成する．マイク入力，adinnet入力では"-sscalc" で
              はなくこちらを使う必要がある．

       -ssalpha value
              "-sscalc", "-ssload" でのスペクトルサブトラクション
              のアルファ係数．大きいほど強く減じるが，歪みも大 き
              くなる． (default: 2.0)．

       -ssfloor value
              ス ペクトルサブトラクションのフロアリング係数．減じ
              た結果パワーが 0 以下になった部分スペクトルに 対 し
              て， 原信号のこの係数倍の信号を割り当てる (default:
              0.5)．

   GMMに基づく入力検証と棄却
       -gmm filename
              GMMによる環境音識別および不要入力棄却において，使用
              するGMMを指定する．ファイル形式は，音響モデルと同様
              のHMM定義ファイルである．なお，GMMの音響特徴ベク ト
              ル は，同時に認識で使用する音韻モデルの特徴ベクトル
              と同一である必要がある．

       -gmmnum N
              GMMの計算において計算する上位ガウス分布数を指 定 す
              る．GMMの混合ガウス分布について，各フレームごとに，
              ここで指定された数の上位ガウス分布のみが計算さ れ，
              そ れ以下は計算から除外される．値値を小さくするほど
              GMMの計算量を削減できるが， 計 算 精 度 が 劣 化 す
              る．(default: 10)

       -gmmreject string
              検証の結果誤入力として棄却すべきGMMのモデル名をコン
              マで区切って与える．入力に対してGMMの尤度計算を行っ
              た 結 果， 最尤のモデルの名前がこの文字列の中にあれ
              ば，入力を無効として棄却する（第2パスを行わずに入力
              を即時キャンセルする）．

   言語モデル(N-gram)
       -nlr 2gram_filename
              単語2-gramのファイル名(ARPA形式)．


       -nrl rev_3gram_filename
              逆向き単語3-gramファイル名．第2パス実行時必須．指定
              しない場合は探索を第1パスのみ実行する．

       -d bingram_filename
              mkbingram で作成したバイナリ形式N-gramファイルを 指
              定 する． "-nlr", "-nrl" の代わりに使用することで起
              動を高速化できる．

       -lmp lm_weight lm_penalty

       -lmp2 lm_weight2 lm_penalty2
              第1パスと第2パスの言語スコアの重みと単語挿入ペナ ル
              ティ．

              実 際の仮説の言語スコアは，N-gramの対数尤度を以下の
              式によってスケーリングしたものが用いられる．

              lm_score1 = lm_weight * 2-gramスコア  +  lm_penalty
              lm_score2 = lm_weight2 * 3-gramスコア + lm_penalty2

              default値：モデルによって変化する

                第1パス  | 第２パス
               ---------------------------
                5.0 -1.0 |  6.0  0.0 (monophone)
                8.0 -2.0 |  8.0 -2.0 (triphone,PTM)
                9.0  8.0 | 11.0 -2.0 (triphone,PTM, setup=v2.1)

       -transp float
              透過単語用に対して追加する単 語 挿 入 ペ ナ ル ティ
              (default: 0.0)

   単語辞書
       -v dictionary_file
              単語辞書ファイル(必須)．

       -silhead {WORD|WORD[OUTSYM]|#num}

       -siltail {WORD|WORD[OUTSYM]|#num}
              文頭／文末の無音に対応する辞書単語を指定する．
              (default: "&lt;s&gt;" / "&lt;/s&gt;")

              Julius ではこれの単語を認識仮説の始終端として固定的
              に扱う．以下のいずれかの様式で指定する．

                                     例
           単語名                    &lt;s&gt;
           単語名[出力シンボル]   &lt;s&gt;[silB]
           #単語ID                   #14

              (単語番号は辞書ファイルの並び順に0番から)

       -forcedict
              辞書中の誤り単語を無視して起動を続行する．エラー と
              なっ た 単 語エントリについては読み込みをスキップす
              る．

   音響モデル(HMM)
       -h hmmfilename
              使用するHMM定義ファイル名(必須)．形式(ascii/binary)
              は自動判別される．

       -hlist HMMlistfilename
              HMMlist ファイル名．triphone体系のHMM使用時に必須で
              ある．

              このファイルは，辞書の音素表記 か ら 生 成 し た 論
              理triphone名からHMM定義名への写像を与える．詳細は付
              属ドキュメントを参照のこと．

       -iwcd1 {best Nmax|avg}
              triphone使用時，第1パスの単語間triphoneの音響尤度計
              算方法を指定する．

              best  N:   同 コンテキストtriphoneの上位N個の平均値
              (default, N=3)
              max: 同コンテキストtriphoneの最大値
              avg: 同コンテキストtriphoneの平均値

       -force_ccd / -no_ccd
              単語間の音素環境依存を考慮するかしないかを明示的 に
              指 定する．指定がない場合はモデルの名前定義から推察
              する．なおtriphone以外で -force_ccd を指定したと き
              の動作は保証されない．

       -notypecheck
              入力特徴パラメータの型チェックを無効にする．
              (default: チェック有効)

   音響尤度計算
       Gaussian  pruning は tied-mixture の音響モデルを使用時に自
       動的に有効になる． tied-mixtureでない通常のモデルの場合 デ
       フォルトで無効となるが，"-gprune" オプションを明示的に指定
       することで，tmix以外のモデルに対しても適用でき る．  Gaus-
       sian Selection の使用には mkgshmm で変換されたモノフォンモ
       デルが必要である．

       -gprune {safe|heuristic|beam|none}
              Gaussian pruning の手法を指定する．
              (default: tied-mixture モデルでは 'safe' (標 準 版)
              'beam' (高速版)，それ以外では 'none')

       -tmix K
              Gaussian  pruning 使用時に，コードブックごとに上位K
              個のガウス分布を計算する．この K を指定する．小さい
              ほ ど 計 算が速くなるが，音響尤度の誤差が大きくなる
              (default: 2)

       -gshmm hmmdefs
              Gaussian Mixture Selection 用のモノフォン音響モデル
              を 指定する． GMS用モノフォンは通常のモノフォンから
              mkgshmm(1) によって生成できる．
              デフォルトは指定無し(GMSを使用しない)．

       -gsnum N
              GMS 使用時，全モノフォンの状態の中から上位 N 個の状
              態のみトライフォンを計算する (default: 24)

   単語間ショートポーズ
       -iwspword
              入 力中の短時間無音（ショートポーズ）に対応する単語
              エントリを，認識辞書に自動追加する．モデル中で文 中
              の 無音の出現をモデル化していない言語モデルを用いる
              ときには，このオプションを指定することで認識率が 改
              善される可能性がある．エントリの内容は "-iwspentry"
              で指定可能．

       -iwspentry
              "-iwspword" で追加する単語エントリを指定する．認 識
              辞 書と同じフォーマットで，クォーテーションで囲って
              指定する．
              (default: "&lt;UNK&gt; [sp] sp sp")

       -iwsp  (マルチパス版のみ)より短時間のcontext-freeな単語 間
              の 無音への対応を有効にする．具体的には，辞書中の全
              単語の読みの末尾にスキップ可能なショートポーズモ デ
              ル を付加する．付加されたモデルはコンテキストの計算
              からは除外される．付加するモデルは "-spmodel" で 指
              定可能．詳細は別ドキュメントを参照のこと．

       -spmodel
              "-iwsp"  で付加するショートポーズモデルの名前を指定
              する．
              (default: "sp")．

   ショートポーズセグメンテーション
       ショートポーズセグメンテーションは，音声区間検出で区切れな
       いような長い音声を，文中の短い無音で区切りながら逐次的に認
       識を行う機構です．コンパイル時に "--enable-sp-segment"  を
       指定することで有効になります．

       -spdur (--enable-sp-segment  時) 第1パスの sp 継続時間長の
              しきい値(単位：フレーム)．ショートポーズ単語が最 尤
              で あるフレームがこの時間以上継続したら，第１パスを
              中断して第２パスを実行する．(default: 10)

   探索パラメータ（第1パス）
       -b beamwidth
              第1パスのビーム幅．HMMのノード数で指定する．この 値
              は第1パスの解探索の幅を決める値で，認識処理時間に大
              きな影響を持つ．値を小さくすることで探索範囲を狭 め
              て 認識処理を早く終わらせることができるが，探索の失
              敗による認識誤りが増大する．値が大きいほど安定し た
              結 果が得られるが，幅にほぼ比例して処理時間とメモリ
              量を消費する．

              default値：モデルによって変化する
                400 (monophone 使用時)
                800 (triphone,PTM 使用時)
               1000 (triphone,PTM,engine=v2.1)

       -sepnum N
               (./configrue --enable-lowmem2 指定時) 辞書木から分
              離する高頻度語の数．
              (default: 150)

       -1pass 第1パスのみ実行する．単語3-gramの指定が無い場合自動
              的にこのモードになる．

       -realtime

       -norealtime
              第1パスを実時間処理するかを明示的に指定する．デフォ
              ル トは，ファイル入力について OFF (-norealtime)，マ
              イク・NetAudio・ネットワー ク 入 力 に つ い て  ON
              (-realtime)． このオプションは CMN と密接な関係にあ
              る：OFF の際は CMN は１入力ごとにそれ自身から計算さ
              れるが，ON の場合は直前の５秒分の入力の値を常に用い
              る．-progout も参照のこと．

       -cmnsave filename
              認識中に計算したCMNパラメータをファイルへ保存する．
              保 存は一入力認識のたびに行われる．すでにファイルが
              ある場合は上書きされる．



       -cmnload filename
              初期CMNパラメータをファイルから読み込む．ファイルは
              "-cmnsave" で保存したファイル．これによってマイク入
              力やネットワーク入力においても起動後の入力第1発話か
              らCMNを適用できる．

   探索パラメータ（第2パス）
       -b2 hyponum
              第 ２ パ スのビーム幅．仮説数で指定する．第２パス中
              に，仮説の単語長ごとに展開数がカウントされ，値が こ
              の 数を越える仮説が展開されたらそれより短い仮説をそ
              の後展開しないようにする．探索失敗を防いで認識率 を
              保つ効果がある．
              (default: 30)

       -n candidatenum
              こ の数の文仮説が得られるまで探索を続ける．得られた
              仮説はスコアで再ソートして結果を出 力 す る．  ( 参
              考：-outputオプション)．

              Juliusでは第2パスの探索の最適性は厳密には保証されな
              いため，最尤候補が常に最初に得られるとは限らな い．
              こ の値が大きいほど真の最尤仮説が得られる可能性が高
              くなるが，長く探索するため処理 時 間 は 大 き く な
              る．(default: 1)

              default値：エンジン設定(--enable-setup=)に依存
                10  (standard)
                 1  (fast,v2.1)

       -output N
              "-n"オプションで指定した仮説数のうち，上位N個を出力
              する
              (default: 1)．

       -cmalpha float
              単語の確信度計算におけるスムージング係数 alpha を指
              定する．
              (default: 0.05)

       -sb score
              ス コアエンベロープの幅．各フレームごとに，それまで
              の最大スコアからこの幅以上離れた部分について はscan
              し ない．値を小さくすることで第２パスの認識速度が速
              くなるが，その分計算誤りが起こる可能性が高くなる．
              (default: 80.0)

       -s stack_size
              解探索中にスタックに保持する仮説の最大数．値が大 き
              い ほ ど 安定した結果が得られるが必要メモリ量が増え
              る．(default: 500)

       -m overflow_pop_times
              解探索打ち切りと判断する展開仮説数のしきい値．展 開
              さ れた仮説数がこの数を越えたとき，そこで探索を打ち
              切る．値が大きいほどあきらめずに探索を続けるが， 探
              索失敗時の処理時間は長くなる．(default: 2000)

       -lookuprange nframe
              単 語展開時に前後何フレームまでみて展開単語を決める
              かを指定する．短い単語の脱落防止に効果があるが， 値
              が大きいと展開仮説が増えるため遅くなる．
              (default: 5)



       -graphrange nframe
              単 語グラフを出力する際，似た位置の同一単語をマージ
              する．単語グラフではスコアや履歴，境界時間の異な る
              単 語は独立したグラフ単語として生成されるが，このオ
              プションを使用することで，境界時間が大きく違わな い
              似 た位置にある同一単語をマージし，よりコンパクトな
              グラフが作成できる．ある単語について同じ単語がグ ラ
              フ 中にあり，その先頭フレームずれと末尾フレームのず
              れが，このオプションで与えられた値以下であれば， 両
              者 をひとつの単語にマージする．デフォルトは 0 (マー
              ジを行わない）．大きい値を指定するほど，似た位置 に
              ある単語がマージされやすくなる．
              こ のオプションは単語グラフ機能を ON にしてコンパイ
              ルされた Julius でのみ有効である．

   Forced alignment
       -walign
              認識結果に対して，単語単位のViterbiアラインメントを
              行 う．単語ごとにマッチした区間，およびフレームごと
              の平均音響尤度が出力される．

       -palign
              認識結果に対して，音素単位のViterbiアラインメントを
              行 う．音素ごとにマッチした区間，およびフレームごと
              の平均音響尤度が出力される．

       -salign
              認識結果に対して，状態単位のViterbiアラインメントを
              行 う．状態ごとにマッチした区間，およびフレームごと
              の平均音響尤度が出力される．

   サーバーモジュールモード
       -module [port]
              サーバーモジュールモードで起動する．起動後はクラ イ
              アントからのtcpip接続を待ち，クライアントからのコマ
              ンドの処理およびクライアントへの認識結果や入力ト リ
              ガ 情 報 を 送 信する．複数文法認識はこのサーバーモ
              ジュールモードでのみ使用することができる．詳細は 関
              連 ドキュメント参照のこと．ポート番号のデフォルトは
              10500 である．サンプルのクライアントとして jcontrol
              が付属している．

       -outcode [W][L][P][S][C][w][l][p][s]
              サー バーモジュールモード時に，クライアントへ送信す
              る認識結果の内容を指定する．それぞれ 'W' は単語の通
              常 の 出 力文字列，'L' はN-gramエントリ，'P' は音素
              列，'S' はスコア，'C'は単語信頼度を表す．大文 字 は
              第2パス，小文字は第1 パスに対応する．例えば第２パス
              の単語と音素列のみを送信したい場 合 は，  "-outcode
              WP"のように指定する．

   メッセージ出力
       -separatescore
              言語スコアと音響スコアをわけて出力する．

       -quiet  音素列やスコアを省略して，ベストの仮説の単語列だけ
              出力する．

       -progout
              第1パスの途中結果を一定時間おきに漸次出力する．

       -proginterval msec
              -progout 時の出力インターバルを指定(単位：ミリ秒)



       -demo  "-progout -quiet" と等価．

       -charconv from to
              出力テキストのコーディング変換を行う． from はモ デ
              ル等で使用している変換元の文字コード名，to は変換先
              の出力コード名を指定する．
              from, to の値として，Linux では "iconv --list" で得
              られるコード名リストの中から指定可能である．Windows
              で は，"ansi",  "mac",  "oem",  "utf-7",   "utf-8",
              "sjis",  "euc" および任意のコードページ番号が指定で
              きる． "ansi" および "oem" は，その OS でデフォルト
              で サ ポー ト さ れているローカルコード（日本版なら
              Shift-JIS）を表す．

   その他
       -debug 大量のデバッグ用内部メッセージを出力する．

       -C jconffile
              jconf設定ファイルを読み込む．これらの実行時オプショ
              ン をあらかじめ記述して読み込ませることができる．ま
              た，あるjconf設定ファイル内でこのオプションにより，
              別のjconf設定ファイルを include することができる．

       -check wchmm
              ( デバッグ用)木構造化辞書の構造を対話的にチェックす
              る．

       -check triphone
              (デバッグ用)音響モデル(とHMMList)による辞書上の単語
              の実際のマッピングを対話的にチェックする．

       -setting
              コンパイル時のエンジン設定を出力して終了する．

       -help  簡単なオプション一覧を表示した後，終了する．

<h3>EXAMPLES</h3>
       使用例については付属のチュートリアルをご覧下さい．

<h3>NOTICE</h3>
       jconf 設定ファイル内でのファイルパスの指定について：ファイ
       ルを相対パスで指定する場合，それは実行時のカレントディレク
       トリではなく，そのjconf ファイルが置いてある場所からの相対
       パスとして解釈されます．注意してください．

<h3>SEE ALSO</h3>
       julian(1), jcontrol(1),  adinrec(1),  adintool(1),  mkbin-
       gram(1), mkbinhmm(1), mkgsmm(1), wav2mfcc(1), mkss(1),

       http://julius.sourceforge.jp/

<h3>DIAGNOSTICS</h3>
       正常終了した場合， Julius は exit status として 0 を返しま
       す．エラーが見付かった場合は異常終了し， exist status とし
       て 1 を返します．

       入力ファイルが見つからない場合やうまく読み込めなかった場合
       は，そのファイルに対する処理をスキップします．

<h3>BUGS</h3>
       Julius で使用できるモデルにはサイズやタイプに若干の制限 が
       あります．詳しくはパッケージに付属のドキュメントを参照して
       ください．

       バグ報告・問い合わせ・コメントな ど は  julius@kuis.kyoto-
       u.ac.jp   ま たは julius@is.aist-nara.ac.jp までお願いしま
       す．

<h3>COPYRIGHT</h3>
       Copyright (c) 1991-2005 京都大学
       Copyright (c) 1997-2000 情報処理振興事業協会(IPA)
       Copyright (c) 2000-2005 奈良先端科学技術大学院大学
       Copyright (c) 2005      名古屋工業大学

<h3>AUTHORS</h3>
       Rev.1.0 (1998/02/20)
              河原 達也  と  李 晃伸 (京都大学)
              が設計を行いました．

              李晃伸 (京都大学)
              が実装しました．

       Rev.1.1 (1998/04/14)

       Rev.1.2 (1998/10/31)

       Rev.2.0 (1999/02/20)

       Rev.2.1 (1999/04/20)

       Rev.2.2 (1999/10/04)

       Rev.3.0 (2000/02/14)

       Rev.3.1 (2000/05/11)
              李 晃伸 (京都大学)
              が実装しました．

       Rev.3.2 (2001/08/15)

       Rev.3.3 (2002/09/11)

       Rev.3.4 (2003/10/01)

       Rev.3.4.1 (2004/02/25)

       Rev.3.4.2 (2004/04/30)
              李 晃伸 (奈良先端大)
              が実装しました．

       Rev.3.5 (2005/09/30)
              李 晃伸 (名古屋工業大学)
              が実装しました．

<h3>THANKS TO</h3>
       このプログラムは Rev.3.1 まで，情報処理振興事業協会(IPA)独
       創 的 情報技術育成事業「日本語ディクテーションの基本ソフト
       ウェアの開発」(代表者：鹿野清宏 奈良先端科学技術大学院大学
       教授)の援助を受けて行われました．

       Rev.3.2以降は「情報処理学会 連続音声認識コンソーシアム」に
       おいて公開されています．

       Windows DLL版 は板野秀樹氏(名古屋大学)の手によって作成・公
       開されています．

       Windows Microsoft Speech API対応版は住吉貴志氏(京都大学)の
       手によるものです．

       上記の協力・貢献してくださった方々，およびさまざまな助言・
       コメントをいただく関係者各位に深く感謝いたします．

       ま た，開発に際して言語モデルを提供して頂いた伊藤克亘氏(電
       子技術総合研究所)，音素モデルを提供して頂いた武田一哉氏(名
       古 屋大学)をはじめとする関係各位に感謝します．また伊藤克亘
       氏をはじめ多くの方に動作確認とデバッグを行って頂きましたこ
       とを感謝します．

       最後に，バグ報告や提案をしていただいている Julius users ML
       のメンバーの方々をはじめとするLinuxコミュニティの方々に 感
       謝します．



                              LOCAL                     JULIUS(1)
</pre>
<hr>
<div align="right">
$Id: julius.html.ja,v 1.1.1.1 2007/01/10 08:01:57 kudravka_ Exp $
</div>
</body></html>
